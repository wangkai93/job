<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.zzia.job.dao.ISystemDao">
  <resultMap id="BaseResultMap" type="cn.edu.zzia.job.domain.System">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sitename" jdbcType="VARCHAR" property="sitename" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="reasons" jdbcType="VARCHAR" property="reasons" />
    <result column="dir" jdbcType="VARCHAR" property="dir" />
    <result column="record" jdbcType="VARCHAR" property="record" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.zzia.job.domain.SystemWithBLOBs">
    <result column="keyword" jdbcType="LONGVARCHAR" property="keyword" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="copyright" jdbcType="LONGVARCHAR" property="copyright" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sitename, url, email, state, reasons, dir, record
  </sql>
  <sql id="Blob_Column_List">
    keyword, description, copyright
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_system
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_system
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.zzia.job.domain.SystemWithBLOBs">
    insert into tbl_system (id, sitename, url, 
      email, state, reasons, 
      dir, record, keyword, 
      description, copyright)
    values (#{id,jdbcType=INTEGER}, #{sitename,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{reasons,jdbcType=VARCHAR}, 
      #{dir,jdbcType=VARCHAR}, #{record,jdbcType=VARCHAR}, #{keyword,jdbcType=LONGVARCHAR}, 
      #{description,jdbcType=LONGVARCHAR}, #{copyright,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zzia.job.domain.SystemWithBLOBs">
    insert into tbl_system
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sitename != null">
        sitename,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="reasons != null">
        reasons,
      </if>
      <if test="dir != null">
        dir,
      </if>
      <if test="record != null">
        record,
      </if>
      <if test="keyword != null">
        keyword,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="copyright != null">
        copyright,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sitename != null">
        #{sitename,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="reasons != null">
        #{reasons,jdbcType=VARCHAR},
      </if>
      <if test="dir != null">
        #{dir,jdbcType=VARCHAR},
      </if>
      <if test="record != null">
        #{record,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        #{keyword,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="copyright != null">
        #{copyright,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zzia.job.domain.SystemWithBLOBs">
    update tbl_system
    <set>
      <if test="sitename != null">
        sitename = #{sitename,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="reasons != null">
        reasons = #{reasons,jdbcType=VARCHAR},
      </if>
      <if test="dir != null">
        dir = #{dir,jdbcType=VARCHAR},
      </if>
      <if test="record != null">
        record = #{record,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        keyword = #{keyword,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="copyright != null">
        copyright = #{copyright,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.zzia.job.domain.SystemWithBLOBs">
    update tbl_system
    set sitename = #{sitename,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      reasons = #{reasons,jdbcType=VARCHAR},
      dir = #{dir,jdbcType=VARCHAR},
      record = #{record,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=LONGVARCHAR},
      description = #{description,jdbcType=LONGVARCHAR},
      copyright = #{copyright,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zzia.job.domain.System">
    update tbl_system
    set sitename = #{sitename,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      reasons = #{reasons,jdbcType=VARCHAR},
      dir = #{dir,jdbcType=VARCHAR},
      record = #{record,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>